/**
 * Push notification API
 * ### API per invio di notifiche push personalizzate agli utenti dell'applicazione RCA SUPPORT  Il servizio di assistenza dell'azienda RCA SRL prevede l'utilizzo di un'applicazione  multipiattaforma (Android, iOS, Web App) chiamata RCA SUPPORT, lo scopo principale di queste api  è l'invio di notifiche push personalizzate agli utenti dell'applicazione  #### Push notification token Ad ogni dispositivo client dell'applicazione viene automaticamente associato un token,  necessario per inviare una notifica push diretta al dispositivo. Tutti i token vengono salvati in un database SQL dove sono presenti i dati sui clienti dell'azienda, ad ogni token viene associato un cliente ed un locale.  #### Firebase Admin SDK e Firebase cloud Messaging (FCM) Il servizio utilizzato per l'invio delle notifiche push è FCM, ed è strutturato in questo modo:  - *Generatore di messaggi e target:*      si occupa della creazione dei messaggi creando delle triplette titolo, descrizione, token che vengono inviate al backend FCM tramite Firebase Admin SDK  - *FCM backend:* legge i dati inviati dal generatore, genera i metadati del messaggio e li invia agli instradatori  - *Instradatori di messaggi specifici della piattaforma:*     - **Android Trasport Layer** per dispositivi Android     - **iOS / APNs** per dispositivi iOS     - **Web Push** per app web  - *SDK sul dispositivo:* viene visualizzata la notifica o il messaggio viene gestito in base allo stato in primo piano / in background dell'app e a qualsiasi logica dell'applicazione pertinente.  #### Analisi dei requisiti  Lo scopo di questa API è quello di **Generatore di messaggi e target**, in particolare si occupa di:  1. Interazione con database SQL dove sono salvati i dati 2. Utilizzo del servizio FCM (Firebase Cloud Messaging) per l'invio delle notifiche push  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import CustomResponse from './model/CustomResponse';
import DatabaseConfiguration from './model/DatabaseConfiguration';
import FirebaseAdminKey from './model/FirebaseAdminKey';
import Group from './model/Group';
import GroupMessage from './model/GroupMessage';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse2003 from './model/InlineResponse2003';
import InlineResponse201 from './model/InlineResponse201';
import InlineResponse2011 from './model/InlineResponse2011';
import InlineResponse2012 from './model/InlineResponse2012';
import InlineResponse2013 from './model/InlineResponse2013';
import InlineResponse2013Response from './model/InlineResponse2013Response';
import Message from './model/Message';
import Token from './model/Token';
import Userinfo from './model/Userinfo';
import UserinfoHttpspushapiusauth0comuserMetadata from './model/UserinfoHttpspushapiusauth0comuserMetadata';
import UserinfoResponse from './model/UserinfoResponse';
import Auth0Api from './api/Auth0Api';
import GroupsApi from './api/GroupsApi';
import MessagesApi from './api/MessagesApi';
import TokensApi from './api/TokensApi';

/**
* _API_per_invio_di_notifiche_push_personalizzate_agli_utenti_dellapplicazione_RCA_SUPPORTIl_servizio_di_assistenza_dellazienda_RCA_SRL_prevede_lutilizzo_di_unapplicazione_multipiattaforma__Android_iOS_Web_App_chiamata_RCA_SUPPORT_lo_scopo_principale_di_queste_api__linvio_di_notifiche_push_personalizzate_agli_utenti_dellapplicazione_Push_notification_tokenAd_ogni_dispositivo_client_dellapplicazione_viene_automaticamente_associato_un_token_necessario_per_inviare_una_notifica_push_diretta_al_dispositivo_Tutti_i_token_vengono_salvati_in_un_database_SQL_dove_sono_presenti_i_dati_sui_clienti_dellaziendaad_ogni_token_viene_associato_un_cliente_ed_un_locale__Firebase_Admin_SDK_e_Firebase_cloud_Messaging__FCMIl_servizio_utilizzato_per_linvio_delle_notifiche_push__FCM_ed__strutturato_in_questo_modo__Generatore_di_messaggi_e_target_____si_occupa_della_creazione_dei_messaggi_creando_delle_triplette_titolo_descrizione_token_che_vengono_inviate_al_backend_FCM_tramite_Firebase_Admin_SDK__FCM_backend_legge_i_dati_inviati_dal_generatore_genera_i_metadati_del_messaggio_e_li_invia_agli_instradatori__Instradatori_di_messaggi_specifici_della_piattaforma______Android_Trasport_Layer_per_dispositivi_Android______iOS__APNs_per_dispositivi_iOS______Web_Push_per_app_web__SDK_sul_dispositivo_viene_visualizzata_la_notifica_o_il_messaggio_viene_gestito_in_base_allo_stato_in_primo_piano__in_background_dellapp_e_a_qualsiasi_logica_dellapplicazione_pertinente__Analisi_dei_requisitiLo_scopo_di_questa_API__quello_di_Generatore_di_messaggi_e_target_in_particolare_si_occupa_di1__Interazione_con_database_SQL_dove_sono_salvati_i_dati2__Utilizzo_del_servizio_FCM__Firebase_Cloud_Messaging_per_linvio_delle_notifiche_push.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PushNotificationApi = require('index'); // See note below*.
* var xxxSvc = new PushNotificationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PushNotificationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PushNotificationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PushNotificationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CustomResponse model constructor.
     * @property {module:model/CustomResponse}
     */
    CustomResponse,

    /**
     * The DatabaseConfiguration model constructor.
     * @property {module:model/DatabaseConfiguration}
     */
    DatabaseConfiguration,

    /**
     * The FirebaseAdminKey model constructor.
     * @property {module:model/FirebaseAdminKey}
     */
    FirebaseAdminKey,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupMessage model constructor.
     * @property {module:model/GroupMessage}
     */
    GroupMessage,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The InlineResponse201 model constructor.
     * @property {module:model/InlineResponse201}
     */
    InlineResponse201,

    /**
     * The InlineResponse2011 model constructor.
     * @property {module:model/InlineResponse2011}
     */
    InlineResponse2011,

    /**
     * The InlineResponse2012 model constructor.
     * @property {module:model/InlineResponse2012}
     */
    InlineResponse2012,

    /**
     * The InlineResponse2013 model constructor.
     * @property {module:model/InlineResponse2013}
     */
    InlineResponse2013,

    /**
     * The InlineResponse2013Response model constructor.
     * @property {module:model/InlineResponse2013Response}
     */
    InlineResponse2013Response,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The Userinfo model constructor.
     * @property {module:model/Userinfo}
     */
    Userinfo,

    /**
     * The UserinfoHttpspushapiusauth0comuserMetadata model constructor.
     * @property {module:model/UserinfoHttpspushapiusauth0comuserMetadata}
     */
    UserinfoHttpspushapiusauth0comuserMetadata,

    /**
     * The UserinfoResponse model constructor.
     * @property {module:model/UserinfoResponse}
     */
    UserinfoResponse,

    /**
    * The Auth0Api service constructor.
    * @property {module:api/Auth0Api}
    */
    Auth0Api,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The MessagesApi service constructor.
    * @property {module:api/MessagesApi}
    */
    MessagesApi,

    /**
    * The TokensApi service constructor.
    * @property {module:api/TokensApi}
    */
    TokensApi
};
